/**
 * @file warhorse
 * @description Convention creation questions: Module.
 * @author Kyle Alexis Sargeant <kasargeant@gmail.com> {@link https://github.com/kasargeant https://github.com/kasargeant}.
 * @copyright Kyle Alexis Sargeant 2017
 * @license See LICENSE file included in this distribution.
 */

"use strict";

// Imports
const readlineSync = require("readline-sync");

function questions() {

    let answers = {warhorse: {}};

    // Project name
    answers.name = readlineSync.question("What name do you want for your project? ", {
        defaultInput: "untitled"
    });
    console.log(`name: ${answers.name}`);

    // Project description
    answers.description = readlineSync.question("What is the project's purpose or description? ", {
        defaultInput: "A new project generated by the Warhorse task runner."
    });
    console.log(`description: ${answers.description}`);

    // Project author
    answers.author = readlineSync.question("Who is/are the project author(s)? ", {
        defaultInput: "Unknown"
    });
    console.log(`author: ${answers.author}`);

    // Project email
    const validateEmail = function(value) {
        let pass = value.match(/^(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i);
        if(pass) {
            return true;
        }
        console.warn("Please enter a valid email address for GIT and NPM configuration");
        return false;
    };

    let isValidEmail = false;
    while(!isValidEmail) {
        answers.email = readlineSync.question("What is the email address for the project? ", {
            defaultInput: "undefined@undefined.com"
        });
        isValidEmail = validateEmail(answers.email);
    }
    console.log(`email: ${answers.email}`);

    // Project version number
    const validateVersion = function(value) {
        let pass = value.match(/^(\d+\.)?(\d+\.)?(\d+)$/i);
        if(pass) {
            return true;
        }
        console.warn("Please enter a valid version number for GIT and NPM configuration");
        return false;
    };

    let isValidVersion = false;
    while(!isValidVersion) {
        answers.version = readlineSync.question("What version number should this project be set at? ", {
            defaultInput: "0.0.0"
        });
        isValidVersion = validateVersion(answers.version);
    }
    console.log(`email: ${answers.version}`);

    // Project license
    const licenses = ["Unlicense", "AGPL-3.0", "Apache-2.0", "BSD-2-Clause", "BSD-3-Clause", "GPL-2.0", "GPL-3.0", "LGPL-2.1", "LGPL-3.0", "MIT", "Proprietary"];
    let licenseIdx = readlineSync.keyInSelect(licenses, "Which license do you wish to use? ", {
        cancel: false
    });
    answers.license = licenses[licenseIdx];
    console.log(`license: ${answers.license}`);

    // Return results
    return answers;
}

// Exports
module.exports = questions;
